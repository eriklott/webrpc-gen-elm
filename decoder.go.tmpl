{{- define "decoder" -}}

{{- $type := .Type -}}
{{- $typeMap := .TypeMap -}}


{{- if isMapType $type -}}
    
    (decodeDict {{if (eq (mapKeyType $type) "Int") }} dictIntKey {{else}} dictStringKey {{end}} {{template "decoder" dict "Type" (mapValueType $type) "TypeMap" $typeMap}})
    
{{- else if isListType $type -}}

    (Decode.list {{template "decoder" dict "Type" (listElemType $type) "TypeMap" $typeMap}})

{{- else if (eq (print $type) "timestamp") -}}

    Iso8601.decoder

{{- else if (eq (print $type) "any") -}}

    valueDecoder

{{- else if isCoreType $type -}}

    Decode.{{ get $typeMap $type | camelCase}}
    
{{- else -}}{{- /* structs */ -}}

    {{ print $type | camelCase }}Decoder

{{- end -}}
{{- end -}}