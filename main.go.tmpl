{{- define "main" -}}

{{- /* Options with default values. */ -}}
{{- $opts := dict -}}
{{- set $opts "module" (default .Opts.module "Api") -}}
{{- set $opts "timeout" (default .Opts.timeout "") -}}
{{- set $opts "baseurl" (default .Opts.baseurl "") -}}
{{- set $opts "credentials" (exists .Opts "credentials") -}}

{{- /* Print help on -help. */ -}}
{{- if exists .Opts "help" -}}
  {{- template "help" $opts -}}
  {{- exit 0 -}}
{{- end -}}

{{- /* Print help on unsupported option. */ -}}
{{- range $k, $v := .Opts }}
  {{- if not (exists $opts $k) -}}
    {{- stderrPrintf "-%v=%q is not supported target option\n\nUsage:\n" $k $v -}}
    {{- template "help" $opts -}}
    {{- exit 1 -}}
  {{- end -}}
{{- end -}}

{{- if ne .WebrpcVersion "v1" -}}
  {{- stderrPrintf "%s generator error: unsupported webrpc version %s\n" .WebrpcTarget .WebrpcVersion -}}
  {{- exit 1 -}}
{{- end -}}

{{- if not (minVersion .WebrpcGenVersion "v0.11.0") -}}
  {{- stderrPrintf "%s generator error: unsupported webrpc-gen version %s, please update\n" .WebrpcTarget .WebrpcGenVersion -}}
  {{- exit 1 -}}
{{- end -}}

{{- /* Map webrpc core types to Elm. */ -}}
{{- $typeMap := dict }}
{{- set $typeMap "any" "Value" -}}
{{- set $typeMap "byte" "String" -}}
{{- set $typeMap "bool" "Bool" -}}
{{- set $typeMap "uint" "Int" -}}
{{- set $typeMap "uint8" "Int" -}}
{{- set $typeMap "uint16" "Int" -}}
{{- set $typeMap "uint32" "Int" -}}
{{- set $typeMap "uint64" "Int" -}}
{{- set $typeMap "int" "Int" -}}
{{- set $typeMap "int8" "Int" -}}
{{- set $typeMap "int16" "Int" -}}
{{- set $typeMap "int32" "Int" -}}
{{- set $typeMap "int64" "Int" -}}
{{- set $typeMap "float32" "Float" -}}
{{- set $typeMap "float64" "Float" -}}
{{- set $typeMap "string" "String" -}}
{{- set $typeMap "timestamp" "Posix" -}}

module {{get $opts "module"}} exposing 
  ( Value(..)
  , Error(..)
  , WebrpcErrorName(..)
  , WebrpcErrorResponse
  , Request
  {{- range $i, $t := .Types }}
  , {{ $t.Name }}{{ if eq $t.Kind "enum" }}(..){{end}}
  {{- end }}
  {{- range $i, $s := .Services }}
  , {{ $s.Name }}
  {{- end }}
  {{- range $i, $s := .Services }}
  , {{ $s.Name | camelCase}}
  {{- end }}  
  , webRpcVersion
  , webRpcSchemaVersion
  , webRpcSchemaHash
  , withBaseUrl
  , withCredentials
  , withTimeout
  , withTracker
  , send
  , task
  )
  
  
{- 
    {{.SchemaName}} {{.SchemaVersion}} {{.SchemaHash}}
    --
    Code generated by webrpc-gen@{{.WebrpcGenVersion}} with {{.WebrpcTarget}} generator. DO NOT EDIT.
    {{.WebrpcGenCommand}}
-}


import Http
import Json.Decode as Decode exposing (Decoder)
import Json.Encode as Encode
import Time exposing (Posix)
import Dict exposing (Dict)
import Task exposing (Task)
import Iso8601


webRpcVersion : String
webRpcVersion =
    "{{.WebrpcVersion}}"


webRpcSchemaVersion : String
webRpcSchemaVersion =
    "{{.SchemaVersion}}"


webRpcSchemaHash : String
webRpcSchemaHash =
    "{{.SchemaHash}}"


{{- template "types" dict "Types" .Types "TypeMap" $typeMap }}
{{- template "services" dict "Services" .Services "TypeMap" $typeMap }}
{{- template "request" dict "Opts" $opts }}
{{- template "decoders" dict "Types" .Types "TypeMap" $typeMap }}
{{- template "encoders" dict "Types" .Types "TypeMap" $typeMap }}
{{- template "errors" dict "WebrpcErrors" .WebrpcErrors "Errors" .Errors  }}
{{- template "value" }}
{{- template "helpers" }}

{{- end -}}