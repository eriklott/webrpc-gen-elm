{{- define "request" -}}

{{- $opts := .Opts -}}

-- REQUEST


type Request response msg =
    Request 
        { url: String
        , decoder : Decoder response
        , encoder : Encode.Value
        , toMsg : (Result Error response -> msg)
        , baseUrl : String
        , withCredentials : Bool
        , tracker : Maybe String
        , timeout : Maybe Float
        }


request : {url: String, decoder : Decoder response, encoder : Encode.Value, toMsg : (Result Error response -> msg)} -> Request response msg
request { url, decoder, encoder, toMsg } =
    Request
        { url = url
        , decoder = decoder
        , encoder = encoder
        , toMsg = toMsg
        , baseUrl = "{{$opts.baseurl}}"
        , withCredentials = {{ if $opts.credentials }}True{{else}}False{{end}}
        , timeout = {{ if $opts.timeout }}Just {{ $opts.timeout }}{{ else }}Nothing{{ end }}
        , tracker = Nothing
        }


withBaseUrl : String -> Request response msg -> Request response msg
withBaseUrl baseUrl (Request req) =
    Request { req | baseUrl = baseUrl }


withCredentials : Bool -> Request response msg -> Request response msg
withCredentials withCreds (Request req) =
    Request { req | withCredentials = withCreds }


withTimeout : Maybe Float -> Request response msg -> Request response msg
withTimeout timeout (Request req) =
    Request { req | timeout = timeout }


withTracker : Maybe String -> Request response msg -> Request response msg
withTracker tracker (Request req) =
    Request { req | tracker = tracker }


send : Request response msg -> Cmd msg
send (Request req) =
    let
        url =
            req.baseUrl ++ req.url

        body =
            req.encoder

        decoder =
            req.decoder

        toMsg =
            req.toMsg

        timeout =
            req.timeout

        tracker =
            req.tracker            

        httpRequest =
            if req.withCredentials then
                Http.riskyRequest

            else
                Http.request
    in
    httpRequest
        { method = "POST"
        , headers = []
        , url = url
        , body = Http.jsonBody body
        , expect = expectJson toMsg decoder
        , timeout = timeout
        , tracker = tracker
        }


{{ end }}