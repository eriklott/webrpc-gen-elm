module RPC exposing (..)

{- 
    Test v0.10.0 c8d3d1963e60ee0a76260a8d1118647dc88dd4b5
    --
    Code generated by webrpc-gen@v0.11.0 with custom generator. DO NOT EDIT.
    webrpc-gen -schema=test.ridl -target=../ -pkg=RPC -client -out=./RPC.elm
-}

import Http
import Json.Decode as Decode exposing (Decoder)
import Json.Encode as Encode
import Time


webRpcVersion : String
webRpcVersion =
    "v1"


webRpcSchemaVersion : String
webRpcSchemaVersion =
    "v0.10.0"


webRpcSchemaHash : String
webRpcSchemaHash =
    "c8d3d1963e60ee0a76260a8d1118647dc88dd4b5"
    

-- TYPES


type Status
    = StatusAVAILABLE
    | StatusNOT_AVAILABLE

type Environment
    = EnvironmentProduction
    | EnvironmentDevelopment

type alias Simple =
    { id : Int 
    , name : String 
    }

type alias User =
    { id : Int 
    , username : String 
    , role : String 
    }

type alias Complex =
    { meta : Dict String Json.Value 
    , metaNestedExample : Dict String (Dict String Int) 
    , namesList : List String 
    , numsList : List Int 
    , doubleArray : List (List String) 
    , listOfMaps : List (Dict String Int) 
    , listOfUsers : List User 
    , mapOfUsers : Dict String User 
    , user : User 
    , enum : Status 
    , metaOpt : Maybe (Dict String Json.Value) 
    , metaNestedExampleOpt : Maybe (Dict String (Dict String Int)) 
    , namesListOpt : Maybe (List String) 
    , numsListOpt : Maybe (List Int) 
    , doubleArrayOpt : Maybe (List (List String)) 
    , listOfMapsOpt : Maybe (List (Dict String Int)) 
    , listOfUsersOpt : Maybe (List User) 
    , mapOfUsersOpt : Maybe (Dict String User) 
    , userOpt : Maybe User 
    , enumOpt : Maybe Status 
    }
