{{define "client"}}
{{- $typeMap := .TypeMap -}}
{{- if .Services -}}

-- CLIENT

{{ range $service := .Services -}}

{{ range $method := .Methods -}}
{{$service.Name | camelCase}}{{$method.Name}} : {{""}}

{{- if $method.Inputs -}}
    {{- range $i, $input := $method.Inputs }}{{template "type" dict "Type" $input.Type "Optional" $input.Optional "TypeMap" $typeMap}} -> {{ end }}
{{- else -}}
    () ->{{" "}}
{{- end -}}

{{- if eq (len $method.Outputs) 0 -}}
    (Result () Http.Error -> msg)
{{- else if eq (len $method.Outputs) 1 -}}
    (Result {{ range .Outputs }}{{template "type" dict "Type" .Type "Optional" .Optional "TypeMap" $typeMap "Nested" true}}{{ end }} Http.Error -> msg)
{{- else if gt (len $method.Outputs) 1 -}}
    (Result { {{ range $i, $_ := .Outputs }}{{if $i}}, {{end}}{{.Name}} : {{template "type" dict "Type" .Type "Optional" .Optional "TypeMap" $typeMap}}{{ end }} } Http.Error -> msg)
{{- end }} -> Cmd msg
{{$service.Name | camelCase}}{{$method.Name}}{{" "}}
{{- if $method.Inputs -}}
    {{ range $i, $_ := $method.Inputs }}{{.Name}} {{ end }}=
{{- else -}}
    _ =
{{- end }}
    let
    in

{{ end }}






{{- end -}}
{{- end -}}
{{- end -}}